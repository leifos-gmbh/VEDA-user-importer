<?php
/**
 * CreateWebBasedTraining
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * VEDA Bildungsmanager API
 *
 * Dokumentation der REST-Schnittstellen des VEDA Bildungsmanagers für die Version 2. Die Dokumentation zu speziellen Versionen kann über die Angabe des zusätzlichen Parameters \"group\" angezeigt werden. Beispiel: .../api/docs?group=v1 für die Dokumentation der Version 1, die aktuelle Version ist unter .../api/docs erreichbar.
 *
 * The version of the OpenAPI document: 2
 * Contact: info@veda.net
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CreateWebBasedTraining Class Doc Comment
 *
 * @category Class
 * @description Ein Web Based Training mit seinen relevanten Daten, zurErstellung eines neuen Web Based Training.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class CreateWebBasedTraining implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CreateWebBasedTraining';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'angebot_bis' => '\DateTime',
        'angebot_von' => '\DateTime',
        'anzahl_ue' => 'float',
        'beschreibung' => 'string',
        'gueltig_ab' => '\DateTime',
        'gueltig_bis' => '\DateTime',
        'hinweise' => 'string',
        'inhalt' => 'string',
        'kurzbezeichnung' => 'string',
        'links' => '\OpenAPI\Client\Model\Link[]',
        'methodik' => 'string',
        'thema' => 'string',
        'thema2' => 'string',
        'veranstaltungs_nr' => 'string',
        'veranstaltungstyp_id' => 'string',
        'voraussetzung' => 'string',
        'wbd_relevant' => 'bool',
        'wbd_thema' => 'string',
        'ziel' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'angebot_bis' => 'date',
        'angebot_von' => 'date',
        'anzahl_ue' => null,
        'beschreibung' => null,
        'gueltig_ab' => 'date',
        'gueltig_bis' => 'date',
        'hinweise' => null,
        'inhalt' => null,
        'kurzbezeichnung' => null,
        'links' => null,
        'methodik' => null,
        'thema' => null,
        'thema2' => null,
        'veranstaltungs_nr' => null,
        'veranstaltungstyp_id' => null,
        'voraussetzung' => null,
        'wbd_relevant' => null,
        'wbd_thema' => null,
        'ziel' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'angebot_bis' => false,
		'angebot_von' => false,
		'anzahl_ue' => false,
		'beschreibung' => false,
		'gueltig_ab' => false,
		'gueltig_bis' => false,
		'hinweise' => false,
		'inhalt' => false,
		'kurzbezeichnung' => false,
		'links' => false,
		'methodik' => false,
		'thema' => false,
		'thema2' => false,
		'veranstaltungs_nr' => false,
		'veranstaltungstyp_id' => false,
		'voraussetzung' => false,
		'wbd_relevant' => false,
		'wbd_thema' => false,
		'ziel' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'angebot_bis' => 'angebotBis',
        'angebot_von' => 'angebotVon',
        'anzahl_ue' => 'anzahlUE',
        'beschreibung' => 'beschreibung',
        'gueltig_ab' => 'gueltigAb',
        'gueltig_bis' => 'gueltigBis',
        'hinweise' => 'hinweise',
        'inhalt' => 'inhalt',
        'kurzbezeichnung' => 'kurzbezeichnung',
        'links' => 'links',
        'methodik' => 'methodik',
        'thema' => 'thema',
        'thema2' => 'thema2',
        'veranstaltungs_nr' => 'veranstaltungsNr',
        'veranstaltungstyp_id' => 'veranstaltungstypId',
        'voraussetzung' => 'voraussetzung',
        'wbd_relevant' => 'wbdRelevant',
        'wbd_thema' => 'wbdThema',
        'ziel' => 'ziel'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'angebot_bis' => 'setAngebotBis',
        'angebot_von' => 'setAngebotVon',
        'anzahl_ue' => 'setAnzahlUe',
        'beschreibung' => 'setBeschreibung',
        'gueltig_ab' => 'setGueltigAb',
        'gueltig_bis' => 'setGueltigBis',
        'hinweise' => 'setHinweise',
        'inhalt' => 'setInhalt',
        'kurzbezeichnung' => 'setKurzbezeichnung',
        'links' => 'setLinks',
        'methodik' => 'setMethodik',
        'thema' => 'setThema',
        'thema2' => 'setThema2',
        'veranstaltungs_nr' => 'setVeranstaltungsNr',
        'veranstaltungstyp_id' => 'setVeranstaltungstypId',
        'voraussetzung' => 'setVoraussetzung',
        'wbd_relevant' => 'setWbdRelevant',
        'wbd_thema' => 'setWbdThema',
        'ziel' => 'setZiel'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'angebot_bis' => 'getAngebotBis',
        'angebot_von' => 'getAngebotVon',
        'anzahl_ue' => 'getAnzahlUe',
        'beschreibung' => 'getBeschreibung',
        'gueltig_ab' => 'getGueltigAb',
        'gueltig_bis' => 'getGueltigBis',
        'hinweise' => 'getHinweise',
        'inhalt' => 'getInhalt',
        'kurzbezeichnung' => 'getKurzbezeichnung',
        'links' => 'getLinks',
        'methodik' => 'getMethodik',
        'thema' => 'getThema',
        'thema2' => 'getThema2',
        'veranstaltungs_nr' => 'getVeranstaltungsNr',
        'veranstaltungstyp_id' => 'getVeranstaltungstypId',
        'voraussetzung' => 'getVoraussetzung',
        'wbd_relevant' => 'getWbdRelevant',
        'wbd_thema' => 'getWbdThema',
        'ziel' => 'getZiel'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('angebot_bis', $data ?? [], null);
        $this->setIfExists('angebot_von', $data ?? [], null);
        $this->setIfExists('anzahl_ue', $data ?? [], null);
        $this->setIfExists('beschreibung', $data ?? [], null);
        $this->setIfExists('gueltig_ab', $data ?? [], null);
        $this->setIfExists('gueltig_bis', $data ?? [], null);
        $this->setIfExists('hinweise', $data ?? [], null);
        $this->setIfExists('inhalt', $data ?? [], null);
        $this->setIfExists('kurzbezeichnung', $data ?? [], null);
        $this->setIfExists('links', $data ?? [], null);
        $this->setIfExists('methodik', $data ?? [], null);
        $this->setIfExists('thema', $data ?? [], null);
        $this->setIfExists('thema2', $data ?? [], null);
        $this->setIfExists('veranstaltungs_nr', $data ?? [], null);
        $this->setIfExists('veranstaltungstyp_id', $data ?? [], null);
        $this->setIfExists('voraussetzung', $data ?? [], null);
        $this->setIfExists('wbd_relevant', $data ?? [], null);
        $this->setIfExists('wbd_thema', $data ?? [], null);
        $this->setIfExists('ziel', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['thema'] === null) {
            $invalidProperties[] = "'thema' can't be null";
        }
        if ($this->container['veranstaltungs_nr'] === null) {
            $invalidProperties[] = "'veranstaltungs_nr' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets angebot_bis
     *
     * @return \DateTime|null
     */
    public function getAngebotBis()
    {
        return $this->container['angebot_bis'];
    }

    /**
     * Sets angebot_bis
     *
     * @param \DateTime|null $angebot_bis Das Angebotsende des Web-Based Trainings.  Übersteuert das veraltete 'gueltigBis'.
     *
     * @return self
     */
    public function setAngebotBis($angebot_bis)
    {
        if (is_null($angebot_bis)) {
            throw new \InvalidArgumentException('non-nullable angebot_bis cannot be null');
        }
        $this->container['angebot_bis'] = $angebot_bis;

        return $this;
    }

    /**
     * Gets angebot_von
     *
     * @return \DateTime|null
     */
    public function getAngebotVon()
    {
        return $this->container['angebot_von'];
    }

    /**
     * Sets angebot_von
     *
     * @param \DateTime|null $angebot_von Der Angebotsbeginn des Web-Based Trainings. Übersteuert das veraltete 'gueltigAb'.
     *
     * @return self
     */
    public function setAngebotVon($angebot_von)
    {
        if (is_null($angebot_von)) {
            throw new \InvalidArgumentException('non-nullable angebot_von cannot be null');
        }
        $this->container['angebot_von'] = $angebot_von;

        return $this;
    }

    /**
     * Gets anzahl_ue
     *
     * @return float|null
     */
    public function getAnzahlUe()
    {
        return $this->container['anzahl_ue'];
    }

    /**
     * Sets anzahl_ue
     *
     * @param float|null $anzahl_ue Die Anzahl der Unterrichtseinheiten des Web-Based Trainings
     *
     * @return self
     */
    public function setAnzahlUe($anzahl_ue)
    {
        if (is_null($anzahl_ue)) {
            throw new \InvalidArgumentException('non-nullable anzahl_ue cannot be null');
        }
        $this->container['anzahl_ue'] = $anzahl_ue;

        return $this;
    }

    /**
     * Gets beschreibung
     *
     * @return string|null
     */
    public function getBeschreibung()
    {
        return $this->container['beschreibung'];
    }

    /**
     * Sets beschreibung
     *
     * @param string|null $beschreibung Die Beschreibung des Web-Based Trainings (HTML möglich)
     *
     * @return self
     */
    public function setBeschreibung($beschreibung)
    {
        if (is_null($beschreibung)) {
            throw new \InvalidArgumentException('non-nullable beschreibung cannot be null');
        }
        $this->container['beschreibung'] = $beschreibung;

        return $this;
    }

    /**
     * Gets gueltig_ab
     *
     * @return \DateTime|null
     */
    public function getGueltigAb()
    {
        return $this->container['gueltig_ab'];
    }

    /**
     * Sets gueltig_ab
     *
     * @param \DateTime|null $gueltig_ab Deprecated! Ersatz: 'angebotVon'. 'angebotVon' übersteuert diesen Wert falls beides gesetzt ist. Der Gültigkeitsbeginn des Web-Based Trainings.
     *
     * @return self
     */
    public function setGueltigAb($gueltig_ab)
    {
        if (is_null($gueltig_ab)) {
            throw new \InvalidArgumentException('non-nullable gueltig_ab cannot be null');
        }
        $this->container['gueltig_ab'] = $gueltig_ab;

        return $this;
    }

    /**
     * Gets gueltig_bis
     *
     * @return \DateTime|null
     */
    public function getGueltigBis()
    {
        return $this->container['gueltig_bis'];
    }

    /**
     * Sets gueltig_bis
     *
     * @param \DateTime|null $gueltig_bis Deprecated! Ersatz: 'angebotBis'. 'angebotBis' übersteuert diesen Wert falls beides gesetzt ist. Das Gültigkeitsende des Web-Based Trainings.
     *
     * @return self
     */
    public function setGueltigBis($gueltig_bis)
    {
        if (is_null($gueltig_bis)) {
            throw new \InvalidArgumentException('non-nullable gueltig_bis cannot be null');
        }
        $this->container['gueltig_bis'] = $gueltig_bis;

        return $this;
    }

    /**
     * Gets hinweise
     *
     * @return string|null
     */
    public function getHinweise()
    {
        return $this->container['hinweise'];
    }

    /**
     * Sets hinweise
     *
     * @param string|null $hinweise Hinweise zum Web-Based Training
     *
     * @return self
     */
    public function setHinweise($hinweise)
    {
        if (is_null($hinweise)) {
            throw new \InvalidArgumentException('non-nullable hinweise cannot be null');
        }
        $this->container['hinweise'] = $hinweise;

        return $this;
    }

    /**
     * Gets inhalt
     *
     * @return string|null
     */
    public function getInhalt()
    {
        return $this->container['inhalt'];
    }

    /**
     * Sets inhalt
     *
     * @param string|null $inhalt Der Inhalt des Web-Based Trainings (HTML möglich)
     *
     * @return self
     */
    public function setInhalt($inhalt)
    {
        if (is_null($inhalt)) {
            throw new \InvalidArgumentException('non-nullable inhalt cannot be null');
        }
        $this->container['inhalt'] = $inhalt;

        return $this;
    }

    /**
     * Gets kurzbezeichnung
     *
     * @return string|null
     */
    public function getKurzbezeichnung()
    {
        return $this->container['kurzbezeichnung'];
    }

    /**
     * Sets kurzbezeichnung
     *
     * @param string|null $kurzbezeichnung Die Kurzbezeichnung des Web-Based Trainings
     *
     * @return self
     */
    public function setKurzbezeichnung($kurzbezeichnung)
    {
        if (is_null($kurzbezeichnung)) {
            throw new \InvalidArgumentException('non-nullable kurzbezeichnung cannot be null');
        }
        $this->container['kurzbezeichnung'] = $kurzbezeichnung;

        return $this;
    }

    /**
     * Gets links
     *
     * @return \OpenAPI\Client\Model\Link[]|null
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param \OpenAPI\Client\Model\Link[]|null $links links
     *
     * @return self
     */
    public function setLinks($links)
    {
        if (is_null($links)) {
            throw new \InvalidArgumentException('non-nullable links cannot be null');
        }
        $this->container['links'] = $links;

        return $this;
    }

    /**
     * Gets methodik
     *
     * @return string|null
     */
    public function getMethodik()
    {
        return $this->container['methodik'];
    }

    /**
     * Sets methodik
     *
     * @param string|null $methodik Die Methodik des Web-Based Trainings (HTML möglich)
     *
     * @return self
     */
    public function setMethodik($methodik)
    {
        if (is_null($methodik)) {
            throw new \InvalidArgumentException('non-nullable methodik cannot be null');
        }
        $this->container['methodik'] = $methodik;

        return $this;
    }

    /**
     * Gets thema
     *
     * @return string
     */
    public function getThema()
    {
        return $this->container['thema'];
    }

    /**
     * Sets thema
     *
     * @param string $thema Das Thema des Web-Based Trainings
     *
     * @return self
     */
    public function setThema($thema)
    {
        if (is_null($thema)) {
            throw new \InvalidArgumentException('non-nullable thema cannot be null');
        }
        $this->container['thema'] = $thema;

        return $this;
    }

    /**
     * Gets thema2
     *
     * @return string|null
     */
    public function getThema2()
    {
        return $this->container['thema2'];
    }

    /**
     * Sets thema2
     *
     * @param string|null $thema2 Thema 2 des Web-Based Trainings
     *
     * @return self
     */
    public function setThema2($thema2)
    {
        if (is_null($thema2)) {
            throw new \InvalidArgumentException('non-nullable thema2 cannot be null');
        }
        $this->container['thema2'] = $thema2;

        return $this;
    }

    /**
     * Gets veranstaltungs_nr
     *
     * @return string
     */
    public function getVeranstaltungsNr()
    {
        return $this->container['veranstaltungs_nr'];
    }

    /**
     * Sets veranstaltungs_nr
     *
     * @param string $veranstaltungs_nr Die Veranstaltungs-Nr. des Web-Based Trainings
     *
     * @return self
     */
    public function setVeranstaltungsNr($veranstaltungs_nr)
    {
        if (is_null($veranstaltungs_nr)) {
            throw new \InvalidArgumentException('non-nullable veranstaltungs_nr cannot be null');
        }
        $this->container['veranstaltungs_nr'] = $veranstaltungs_nr;

        return $this;
    }

    /**
     * Gets veranstaltungstyp_id
     *
     * @return string|null
     */
    public function getVeranstaltungstypId()
    {
        return $this->container['veranstaltungstyp_id'];
    }

    /**
     * Sets veranstaltungstyp_id
     *
     * @param string|null $veranstaltungstyp_id Die ID des Veranstaltungstyps des Web-Based Trainings
     *
     * @return self
     */
    public function setVeranstaltungstypId($veranstaltungstyp_id)
    {
        if (is_null($veranstaltungstyp_id)) {
            throw new \InvalidArgumentException('non-nullable veranstaltungstyp_id cannot be null');
        }
        $this->container['veranstaltungstyp_id'] = $veranstaltungstyp_id;

        return $this;
    }

    /**
     * Gets voraussetzung
     *
     * @return string|null
     */
    public function getVoraussetzung()
    {
        return $this->container['voraussetzung'];
    }

    /**
     * Sets voraussetzung
     *
     * @param string|null $voraussetzung Die Voraussetzungen für das Web-Based Trainings (HTML möglich)
     *
     * @return self
     */
    public function setVoraussetzung($voraussetzung)
    {
        if (is_null($voraussetzung)) {
            throw new \InvalidArgumentException('non-nullable voraussetzung cannot be null');
        }
        $this->container['voraussetzung'] = $voraussetzung;

        return $this;
    }

    /**
     * Gets wbd_relevant
     *
     * @return bool|null
     */
    public function getWbdRelevant()
    {
        return $this->container['wbd_relevant'];
    }

    /**
     * Sets wbd_relevant
     *
     * @param bool|null $wbd_relevant Dieses Kennzeichen gibt an, ob das Web-Based Training relevant für die Weiterbildungsdatenbank(WBD) ist
     *
     * @return self
     */
    public function setWbdRelevant($wbd_relevant)
    {
        if (is_null($wbd_relevant)) {
            throw new \InvalidArgumentException('non-nullable wbd_relevant cannot be null');
        }
        $this->container['wbd_relevant'] = $wbd_relevant;

        return $this;
    }

    /**
     * Gets wbd_thema
     *
     * @return string|null
     */
    public function getWbdThema()
    {
        return $this->container['wbd_thema'];
    }

    /**
     * Sets wbd_thema
     *
     * @param string|null $wbd_thema Das WBD-Thema des Web-Based Trainings
     *
     * @return self
     */
    public function setWbdThema($wbd_thema)
    {
        if (is_null($wbd_thema)) {
            throw new \InvalidArgumentException('non-nullable wbd_thema cannot be null');
        }
        $this->container['wbd_thema'] = $wbd_thema;

        return $this;
    }

    /**
     * Gets ziel
     *
     * @return string|null
     */
    public function getZiel()
    {
        return $this->container['ziel'];
    }

    /**
     * Sets ziel
     *
     * @param string|null $ziel Die Ziele des Web-Based Trainings (HTML möglich)
     *
     * @return self
     */
    public function setZiel($ziel)
    {
        if (is_null($ziel)) {
            throw new \InvalidArgumentException('non-nullable ziel cannot be null');
        }
        $this->container['ziel'] = $ziel;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


